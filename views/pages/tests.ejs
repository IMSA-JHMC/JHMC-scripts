<!DOCTYPE html>
<html lang="en">

<head>
    <%- include('../partials/head'); %>
        <%- include('../partials/meta'); %>
            <script src="https://polyfill.io/v3/polyfill.min.js?features=es6"></script>
            <script id="MathJax-script" async
                src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>
            <script>
                MathJax = {
                    tex: {
                        inlineMath: [['$', '$'], ['\\(', '\\)']]
                    },
                    svg: {
                        // fontCache: 'global'
                    }
                };
            </script>
            <style>
                .text-nowrap {
                    overflow: hidden;
                    white-space: nowrap !important;
                }
            </style>
</head>

<body class="container">

    <header>
        <%- include('../partials/header'); %>
    </header>

    <main>
        <div class="row">
            <div class="col-sm-12">
                <div class="jumbotron">
                    <h1>
                        <%= competition %> Test
                    </h1>
                    <p>You have <%= durationText %> to complete this test.</p>
                    <p>
                        <% if (individualQuestions) { %>
                            You will see only one question at a time. You will not be able to go back to an old
                            question.
                            <% } else { %>
                                Because this is a team test, all questions will be available.
                                <% } %>
                                    Calculators are allowed.
                    </p>
                    <p>
                        If you encounter any technical difficulties, private message your proctor on Zoom.
                    </p>
                    <div id="infoDiv" style="display: none;">
                        <hr>
                        <h2 id='infoTitle'>Test Completed</h2>
                        <p>
                            Please refer to your personal schedule page to find what is next.
                        </p>
                    </div>
                    <button type="button" id="beginTestButton" class="btn btn-dark btn-lg">
                        <%= beginButtonText %>
                    </button>
                    <div id="loadingSpinner" class="spinner-border" style="width: 2rem; height: 2rem;display: none;"
                        role="status">
                        <span class="sr-only">Loading...</span>
                    </div>
                    <div id="questionDiv" style="display:none;">
                        <div id="questions">

                        </div>
                        <div style="display:<%= individualQuestions ? 'none' : 'block' %>">
                            <hr>
                            <button class="btn btn-dark next-button" type="button" data-bs-toggle="tooltip"
                                id="next-button" data-bs-placement="top" title="Remember, all answers are final">
                                Submit</button>
                        </div>
                    </div>
                </div>
                <% if (individualQuestions) { %>
                    <div class="progress">
                        <div id="question-progress-bar" style="width: 0%" class="progress-bar" role="progressbar"
                            aria-valuenow="1" aria-valuemin="0" aria-valuemax="10"></div>
                    </div>
                    <% } %>
                        <br>
            </div>

            <!-- <div class="col-sm-3">
                <div class="well">
                    <h3>Time Remaining</h3>
                </div>
            </div> -->

        </div>
    </main>

    <footer>
        <%- include('../partials/footer'); %>
    </footer>
    <div style="position: absolute; right: 10px; bottom: 10px;">
        <div class="toast" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-header">
                <!-- <img src="..." class="rounded me-2" alt="..."> -->
                <strong class="me-auto"><span class="toast-header-text"></span></strong>
                &nbsp;&nbsp;&nbsp;&nbsp;
                <small>Now</small>
            </div>
            <div class="toast-body">

            </div>
        </div>
    </div>
    <script>
        var recordId = '<%- recordId %>';
        var competitionId = '<%- competitionId %>';
        var competitionCode = '<%- competitionCode %>';
        var numberOfQuestions = '<%- numberOfQuestions %>';
        var questionOnOpen = '<%- currentQuestion %>';
        var available = '<%- available %>';
        var counterInterval;
        var individualQuestions = <%= individualQuestions %>;
        var questionTemplate = `<%- questionTemplate %>`;
        var showWindowToast = false;

        $(document).ready(() => {
            $("#question-progress-bar").attr("aria-valuemax", numberOfQuestions);
            $("#question-progress-bar").css("width", 100 * parseInt(questionOnOpen) / numberOfQuestions + "%");

            if (available !== "true") {
                loading(false);
                $("#questionDiv").hide();
                $("#infoDiv").show();
                $('#infoTitle').text(available);
                $("#beginTestButton").attr("disabled", "true");
            } else if (questionOnOpen === numberOfQuestions) {
                finished();
            }

            $("#beginTestButton").click(() => {
                $("#beginTestButton").hide();

                if (!confirm('By clicking \"OK\" you certify that you are indeed <%= name %> and are taking the <%= competition %> test. If this is not correct click "Cancel" and talk to you proctor and teacher.')) {
                    return;
                }

                loading();
                $.ajax({
                    type: 'POST',
                    url: "/test/endpoint/" + recordId,
                    async: true,
                    data:
                        JSON.stringify({
                            action: "begin",
                            competitionCode: competitionCode,
                        }),
                    contentType: 'application/json; charset=utf-8',
                    success: function (data) { displayQuestion(data) },
                    error: function (xhr, ajaxOptions, thrownError) {
                        alert(thrownError);
                    }
                });
            });

            $(window).focus(function () {
                if (showWindowToast) {
                    $(".toast-header-text").text("Testing window left")
                    $(".toast-body").text("Do not leave the testing window. This was automatically reported.")
                    mainToast.show();
                }
                showWindowToast = false;
            });
            // TODO: Close window button when completed or view contest schedule
        });

        var nextQuestion = () => {
            $("#questionDiv").hide();
            loading();
            let answers = $('.answer').map((_, el) => {
                return {
                    text: el.value,
                    questionCode: el.getAttribute("questioncode")
                }
            }).get();

            $.ajax({
                type: 'POST',
                url: "/test/endpoint/" + recordId,
                async: true,
                data:
                    JSON.stringify({
                        action: "next",
                        competitionCode: competitionCode,
                        answers
                    }),
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    displayQuestion(data);
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert(thrownError);
                }
            });
        }

        var displayQuestion = obj => {
            if (obj == "FINISHED") {
                finished();
                return;
            } else if (obj == "TIMEOUT") {
                location.reload();
            }

            console.log(obj);
            let questions = obj.questions;
            let mathjaxNodes = [];

            let html = "";
            for (question of questions) {
                // html += ejs.compile(questionTemplate)({ questionIndex: question.index, individualQuestions });
                html += ejs.render(questionTemplate, { questionIndex: question.index, questionCode: question.questionCode, individualQuestions }).toString();
            }

            $("#questions").html(html);

            for (question of questions) {
                $(`.answer-${question.index}`).val("");
                $(`.questionTitle-${question.index}`).text("Question " + parseInt(question.index + 1));
                let node = $(`.questionText-${question.index}`)[0];
                node.innerHTML = question.text;
                mathjaxNodes.push(node);
            }
            clearInterval(counterInterval);
            countdown(new Date(obj.closingTime));
            MathJax.typesetClear(mathjaxNodes);
            MathJax.typesetPromise(mathjaxNodes).then(() => {
                // the new content is has been typeset
                $("#questionDiv").show();
                loading(false);
            });
            if (individualQuestions) {
                $("#question-progress-bar").css("width", 100 * parseInt(questions[0].index) / numberOfQuestions + "%");
                $("#question-progress-bar").attr("aria-valuenow", parseInt(questions[0].index));
            }
            $(".next-button").click(nextQuestion);

            $(window).blur(function () {
                    // Your action here
                    console.log("window blurred!");
                    showWindowToast = true;
                });
        }

        var loading = (go) => {
            if (go === false) {
                $("#loadingSpinner").hide();
            } else {
                $("#loadingSpinner").show();
            }
        }

        var finished = () => {
            loading(false);
            $("#beginTestButton").hide();
            $("#questionDiv").hide();
            $("#infoDiv").show();
            $("#question-progress-bar").css("width", "100%");
            $("#question-progress-bar").attr("aria-valuenow", numberOfQuestions);
        }

        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl)
        });

        var toastElList = [].slice.call(document.querySelectorAll('.toast'));
        var mainToast = toastElList.map(function (toastEl) {
            return new bootstrap.Toast(toastEl, { delay: 5000 });
        })[0];

        var countdown = (date_future) => {
            console.log(date_future);
            // get total seconds between the times
            setCounterTime(date_future);
            counterInterval = setInterval(() => {
                setCounterTime(date_future);
            }, 1000);
        }

        var setCounterTime = (date_future) => {
            var date_now = new Date();
            var delta = Math.abs(date_future - date_now) / 1000;

            var minutes = Math.floor(delta / 60);
            delta -= minutes * 60;

            var seconds = Math.round(delta % 60);  // in theory the modulus is not required
            var secondsText = seconds.toString();
            if (secondsText.length == 1) {
                secondsText = "0" + secondsText;
            }

            $(".remainingTime").text((individualQuestions ? " - " : '') + minutes + ":" + secondsText + " Remaining");

            if (minutes == 5 && seconds == 0) {
                $(".toast-header-text").text("5 Minutes Remaining")
                $(".toast-body").text("Your test will be automatically submitted in 5 minutes.")
                mainToast.show();
            }

            if (minutes == 0 && seconds == 0) {
                // TODO: MAKE SURE THIS ACTUALLY SUBMIT
                $(".next-button").click();
                clearInterval(counterInterval);
                // TODO: Add actual good looking alert
                alert("Time is Up! Your last question was automatically submitted.");
                location.reload();
            }
        }

    </script>
</body>

</html>